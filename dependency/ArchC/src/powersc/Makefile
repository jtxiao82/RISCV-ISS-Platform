# Makefile.in generated by automake 1.15 from Makefile.am.
# src/powersc/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/archc
pkgincludedir = $(includedir)/archc
pkglibdir = $(libdir)/archc
pkglibexecdir = $(libexecdir)/archc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = src/powersc
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libpowersc_a_AR = $(AR) $(ARFLAGS)
libpowersc_a_LIBADD =
am_libpowersc_a_OBJECTS = libpowersc_a-powersc.$(OBJEXT) \
	libpowersc_a-psc_sampler.$(OBJEXT) \
	libpowersc_a-psc_obj_rep.$(OBJEXT) \
	libpowersc_a-psc_bit.$(OBJEXT) \
	libpowersc_a-psc_signal_bool.$(OBJEXT) \
	libpowersc_a-psc_clock.$(OBJEXT) \
	libpowersc_a-psc_logic.$(OBJEXT) \
	libpowersc_a-psc_randgen.$(OBJEXT) \
	libpowersc_a-psc_tables.$(OBJEXT) \
	libpowersc_a-psc_misc.$(OBJEXT) \
	libpowersc_a-psc_interp.$(OBJEXT) \
	libpowersc_a-psc_techlib.$(OBJEXT) \
	libpowersc_a-psc_macromodel.$(OBJEXT)
libpowersc_a_OBJECTS = $(am_libpowersc_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libpowersc_a_SOURCES) $(dist_EXTRA_libpowersc_a_SOURCES)
DIST_SOURCES = $(libpowersc_a_SOURCES) \
	$(dist_EXTRA_libpowersc_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/config/missing autoconf
AUTOHEADER = ${SHELL} /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/config/missing autoheader
AUTOMAKE = ${SHELL} /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/config/missing automake-1.15
AWK = gawk
BINUTILS_DIR = 
BISON = bison
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=gnu++11 -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXPORT_SYSTEMC_LIB = /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/lib-linux64
EXPORT_SYSTEMC_PKG = EXPORT_SYSTEMC_LIB/pkgconfig
FGREP = /bin/grep -F
FLEX = flex
GDB_DIR = 
GREP = /bin/grep
HAVE_CXX11 = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBELF_CFLAGS = 
LIBELF_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = archc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = archc
PACKAGE_STRING = archc 2.4.1
PACKAGE_TARNAME = archc
PACKAGE_URL = 
PACKAGE_VERSION = 2.4.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SYSTEMC_CFLAGS = -pthread  -I/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/include
SYSTEMC_LIBS = -L/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/lib-linux64 -lsystemc
TLM2_CFLAGS = -I/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/include
TLM2_LIBS = -L/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/lib-linux64 -lsystemc
TLM_CFLAGS = -I/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/include
TLM_LIBS = -L/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/lib-linux64 -lsystemc
VERSION = 2.4.1
YACC = bison -y
YFLAGS = 
abs_builddir = /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/src/powersc
abs_srcdir = /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/src/powersc
abs_top_builddir = /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC
abs_top_srcdir = /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/ArchC/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/archc
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LIBRARIES = libpowersc.a
AM_CPPFLAGS = -I. -pthread  -I/home/jtxiao/NTHU/Research/Git/RISCV-ISS-Platform/dependency/../install/systemc/include
include_HEADERS = psc_sampler.h psc_base_integer.h psc_objinfo.h psc_objinfo_if.h psc_obj_rep.h psc_obj_rep_base.h debug_power.h powersc.h psc_bit.h psc_bv.h psc_clock.h psc_int.h psc_logic.h psc_lv.h psc_sensitive.h psc_signal.h psc_signal_bool.h psc_uint.h psc_randgen.h psc_tables.h psc_misc.h psc_interp.h psc_techlib.h psc_macromodel.h config.h
libpowersc_a_CXXFLAGS = -Wall -Wno-deprecated -Wno-char-subscripts -std=c++11 -std=gnu++11
dist_EXTRA_libpowersc_a_SOURCES = psc_objinfo.cpp psc_bv.cpp psc_int.cpp psc_lv.cpp psc_uint.cpp  
libpowersc_a_SOURCES = powersc.cpp psc_sampler.cpp psc_obj_rep.cpp psc_bit.cpp psc_signal_bool.cpp psc_clock.cpp psc_logic.cpp psc_randgen.cpp psc_tables.cpp psc_misc.cpp psc_interp.cpp psc_techlib.cpp psc_macromodel.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/powersc/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/powersc/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libpowersc.a: $(libpowersc_a_OBJECTS) $(libpowersc_a_DEPENDENCIES) $(EXTRA_libpowersc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libpowersc.a
	$(AM_V_AR)$(libpowersc_a_AR) libpowersc.a $(libpowersc_a_OBJECTS) $(libpowersc_a_LIBADD)
	$(AM_V_at)$(RANLIB) libpowersc.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libpowersc_a-powersc.Po
include ./$(DEPDIR)/libpowersc_a-psc_bit.Po
include ./$(DEPDIR)/libpowersc_a-psc_bv.Po
include ./$(DEPDIR)/libpowersc_a-psc_clock.Po
include ./$(DEPDIR)/libpowersc_a-psc_int.Po
include ./$(DEPDIR)/libpowersc_a-psc_interp.Po
include ./$(DEPDIR)/libpowersc_a-psc_logic.Po
include ./$(DEPDIR)/libpowersc_a-psc_lv.Po
include ./$(DEPDIR)/libpowersc_a-psc_macromodel.Po
include ./$(DEPDIR)/libpowersc_a-psc_misc.Po
include ./$(DEPDIR)/libpowersc_a-psc_obj_rep.Po
include ./$(DEPDIR)/libpowersc_a-psc_objinfo.Po
include ./$(DEPDIR)/libpowersc_a-psc_randgen.Po
include ./$(DEPDIR)/libpowersc_a-psc_sampler.Po
include ./$(DEPDIR)/libpowersc_a-psc_signal_bool.Po
include ./$(DEPDIR)/libpowersc_a-psc_tables.Po
include ./$(DEPDIR)/libpowersc_a-psc_techlib.Po
include ./$(DEPDIR)/libpowersc_a-psc_uint.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libpowersc_a-powersc.o: powersc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-powersc.o -MD -MP -MF $(DEPDIR)/libpowersc_a-powersc.Tpo -c -o libpowersc_a-powersc.o `test -f 'powersc.cpp' || echo '$(srcdir)/'`powersc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-powersc.Tpo $(DEPDIR)/libpowersc_a-powersc.Po
#	$(AM_V_CXX)source='powersc.cpp' object='libpowersc_a-powersc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-powersc.o `test -f 'powersc.cpp' || echo '$(srcdir)/'`powersc.cpp

libpowersc_a-powersc.obj: powersc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-powersc.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-powersc.Tpo -c -o libpowersc_a-powersc.obj `if test -f 'powersc.cpp'; then $(CYGPATH_W) 'powersc.cpp'; else $(CYGPATH_W) '$(srcdir)/powersc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-powersc.Tpo $(DEPDIR)/libpowersc_a-powersc.Po
#	$(AM_V_CXX)source='powersc.cpp' object='libpowersc_a-powersc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-powersc.obj `if test -f 'powersc.cpp'; then $(CYGPATH_W) 'powersc.cpp'; else $(CYGPATH_W) '$(srcdir)/powersc.cpp'; fi`

libpowersc_a-psc_sampler.o: psc_sampler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_sampler.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_sampler.Tpo -c -o libpowersc_a-psc_sampler.o `test -f 'psc_sampler.cpp' || echo '$(srcdir)/'`psc_sampler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_sampler.Tpo $(DEPDIR)/libpowersc_a-psc_sampler.Po
#	$(AM_V_CXX)source='psc_sampler.cpp' object='libpowersc_a-psc_sampler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_sampler.o `test -f 'psc_sampler.cpp' || echo '$(srcdir)/'`psc_sampler.cpp

libpowersc_a-psc_sampler.obj: psc_sampler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_sampler.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_sampler.Tpo -c -o libpowersc_a-psc_sampler.obj `if test -f 'psc_sampler.cpp'; then $(CYGPATH_W) 'psc_sampler.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_sampler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_sampler.Tpo $(DEPDIR)/libpowersc_a-psc_sampler.Po
#	$(AM_V_CXX)source='psc_sampler.cpp' object='libpowersc_a-psc_sampler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_sampler.obj `if test -f 'psc_sampler.cpp'; then $(CYGPATH_W) 'psc_sampler.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_sampler.cpp'; fi`

libpowersc_a-psc_obj_rep.o: psc_obj_rep.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_obj_rep.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo -c -o libpowersc_a-psc_obj_rep.o `test -f 'psc_obj_rep.cpp' || echo '$(srcdir)/'`psc_obj_rep.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo $(DEPDIR)/libpowersc_a-psc_obj_rep.Po
#	$(AM_V_CXX)source='psc_obj_rep.cpp' object='libpowersc_a-psc_obj_rep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_obj_rep.o `test -f 'psc_obj_rep.cpp' || echo '$(srcdir)/'`psc_obj_rep.cpp

libpowersc_a-psc_obj_rep.obj: psc_obj_rep.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_obj_rep.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo -c -o libpowersc_a-psc_obj_rep.obj `if test -f 'psc_obj_rep.cpp'; then $(CYGPATH_W) 'psc_obj_rep.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_obj_rep.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo $(DEPDIR)/libpowersc_a-psc_obj_rep.Po
#	$(AM_V_CXX)source='psc_obj_rep.cpp' object='libpowersc_a-psc_obj_rep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_obj_rep.obj `if test -f 'psc_obj_rep.cpp'; then $(CYGPATH_W) 'psc_obj_rep.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_obj_rep.cpp'; fi`

libpowersc_a-psc_bit.o: psc_bit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bit.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_bit.Tpo -c -o libpowersc_a-psc_bit.o `test -f 'psc_bit.cpp' || echo '$(srcdir)/'`psc_bit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_bit.Tpo $(DEPDIR)/libpowersc_a-psc_bit.Po
#	$(AM_V_CXX)source='psc_bit.cpp' object='libpowersc_a-psc_bit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bit.o `test -f 'psc_bit.cpp' || echo '$(srcdir)/'`psc_bit.cpp

libpowersc_a-psc_bit.obj: psc_bit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bit.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_bit.Tpo -c -o libpowersc_a-psc_bit.obj `if test -f 'psc_bit.cpp'; then $(CYGPATH_W) 'psc_bit.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bit.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_bit.Tpo $(DEPDIR)/libpowersc_a-psc_bit.Po
#	$(AM_V_CXX)source='psc_bit.cpp' object='libpowersc_a-psc_bit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bit.obj `if test -f 'psc_bit.cpp'; then $(CYGPATH_W) 'psc_bit.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bit.cpp'; fi`

libpowersc_a-psc_signal_bool.o: psc_signal_bool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_signal_bool.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo -c -o libpowersc_a-psc_signal_bool.o `test -f 'psc_signal_bool.cpp' || echo '$(srcdir)/'`psc_signal_bool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo $(DEPDIR)/libpowersc_a-psc_signal_bool.Po
#	$(AM_V_CXX)source='psc_signal_bool.cpp' object='libpowersc_a-psc_signal_bool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_signal_bool.o `test -f 'psc_signal_bool.cpp' || echo '$(srcdir)/'`psc_signal_bool.cpp

libpowersc_a-psc_signal_bool.obj: psc_signal_bool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_signal_bool.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo -c -o libpowersc_a-psc_signal_bool.obj `if test -f 'psc_signal_bool.cpp'; then $(CYGPATH_W) 'psc_signal_bool.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_signal_bool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo $(DEPDIR)/libpowersc_a-psc_signal_bool.Po
#	$(AM_V_CXX)source='psc_signal_bool.cpp' object='libpowersc_a-psc_signal_bool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_signal_bool.obj `if test -f 'psc_signal_bool.cpp'; then $(CYGPATH_W) 'psc_signal_bool.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_signal_bool.cpp'; fi`

libpowersc_a-psc_clock.o: psc_clock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_clock.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_clock.Tpo -c -o libpowersc_a-psc_clock.o `test -f 'psc_clock.cpp' || echo '$(srcdir)/'`psc_clock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_clock.Tpo $(DEPDIR)/libpowersc_a-psc_clock.Po
#	$(AM_V_CXX)source='psc_clock.cpp' object='libpowersc_a-psc_clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_clock.o `test -f 'psc_clock.cpp' || echo '$(srcdir)/'`psc_clock.cpp

libpowersc_a-psc_clock.obj: psc_clock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_clock.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_clock.Tpo -c -o libpowersc_a-psc_clock.obj `if test -f 'psc_clock.cpp'; then $(CYGPATH_W) 'psc_clock.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_clock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_clock.Tpo $(DEPDIR)/libpowersc_a-psc_clock.Po
#	$(AM_V_CXX)source='psc_clock.cpp' object='libpowersc_a-psc_clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_clock.obj `if test -f 'psc_clock.cpp'; then $(CYGPATH_W) 'psc_clock.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_clock.cpp'; fi`

libpowersc_a-psc_logic.o: psc_logic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_logic.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_logic.Tpo -c -o libpowersc_a-psc_logic.o `test -f 'psc_logic.cpp' || echo '$(srcdir)/'`psc_logic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_logic.Tpo $(DEPDIR)/libpowersc_a-psc_logic.Po
#	$(AM_V_CXX)source='psc_logic.cpp' object='libpowersc_a-psc_logic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_logic.o `test -f 'psc_logic.cpp' || echo '$(srcdir)/'`psc_logic.cpp

libpowersc_a-psc_logic.obj: psc_logic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_logic.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_logic.Tpo -c -o libpowersc_a-psc_logic.obj `if test -f 'psc_logic.cpp'; then $(CYGPATH_W) 'psc_logic.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_logic.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_logic.Tpo $(DEPDIR)/libpowersc_a-psc_logic.Po
#	$(AM_V_CXX)source='psc_logic.cpp' object='libpowersc_a-psc_logic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_logic.obj `if test -f 'psc_logic.cpp'; then $(CYGPATH_W) 'psc_logic.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_logic.cpp'; fi`

libpowersc_a-psc_randgen.o: psc_randgen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_randgen.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_randgen.Tpo -c -o libpowersc_a-psc_randgen.o `test -f 'psc_randgen.cpp' || echo '$(srcdir)/'`psc_randgen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_randgen.Tpo $(DEPDIR)/libpowersc_a-psc_randgen.Po
#	$(AM_V_CXX)source='psc_randgen.cpp' object='libpowersc_a-psc_randgen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_randgen.o `test -f 'psc_randgen.cpp' || echo '$(srcdir)/'`psc_randgen.cpp

libpowersc_a-psc_randgen.obj: psc_randgen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_randgen.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_randgen.Tpo -c -o libpowersc_a-psc_randgen.obj `if test -f 'psc_randgen.cpp'; then $(CYGPATH_W) 'psc_randgen.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_randgen.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_randgen.Tpo $(DEPDIR)/libpowersc_a-psc_randgen.Po
#	$(AM_V_CXX)source='psc_randgen.cpp' object='libpowersc_a-psc_randgen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_randgen.obj `if test -f 'psc_randgen.cpp'; then $(CYGPATH_W) 'psc_randgen.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_randgen.cpp'; fi`

libpowersc_a-psc_tables.o: psc_tables.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_tables.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_tables.Tpo -c -o libpowersc_a-psc_tables.o `test -f 'psc_tables.cpp' || echo '$(srcdir)/'`psc_tables.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_tables.Tpo $(DEPDIR)/libpowersc_a-psc_tables.Po
#	$(AM_V_CXX)source='psc_tables.cpp' object='libpowersc_a-psc_tables.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_tables.o `test -f 'psc_tables.cpp' || echo '$(srcdir)/'`psc_tables.cpp

libpowersc_a-psc_tables.obj: psc_tables.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_tables.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_tables.Tpo -c -o libpowersc_a-psc_tables.obj `if test -f 'psc_tables.cpp'; then $(CYGPATH_W) 'psc_tables.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_tables.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_tables.Tpo $(DEPDIR)/libpowersc_a-psc_tables.Po
#	$(AM_V_CXX)source='psc_tables.cpp' object='libpowersc_a-psc_tables.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_tables.obj `if test -f 'psc_tables.cpp'; then $(CYGPATH_W) 'psc_tables.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_tables.cpp'; fi`

libpowersc_a-psc_misc.o: psc_misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_misc.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_misc.Tpo -c -o libpowersc_a-psc_misc.o `test -f 'psc_misc.cpp' || echo '$(srcdir)/'`psc_misc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_misc.Tpo $(DEPDIR)/libpowersc_a-psc_misc.Po
#	$(AM_V_CXX)source='psc_misc.cpp' object='libpowersc_a-psc_misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_misc.o `test -f 'psc_misc.cpp' || echo '$(srcdir)/'`psc_misc.cpp

libpowersc_a-psc_misc.obj: psc_misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_misc.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_misc.Tpo -c -o libpowersc_a-psc_misc.obj `if test -f 'psc_misc.cpp'; then $(CYGPATH_W) 'psc_misc.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_misc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_misc.Tpo $(DEPDIR)/libpowersc_a-psc_misc.Po
#	$(AM_V_CXX)source='psc_misc.cpp' object='libpowersc_a-psc_misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_misc.obj `if test -f 'psc_misc.cpp'; then $(CYGPATH_W) 'psc_misc.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_misc.cpp'; fi`

libpowersc_a-psc_interp.o: psc_interp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_interp.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_interp.Tpo -c -o libpowersc_a-psc_interp.o `test -f 'psc_interp.cpp' || echo '$(srcdir)/'`psc_interp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_interp.Tpo $(DEPDIR)/libpowersc_a-psc_interp.Po
#	$(AM_V_CXX)source='psc_interp.cpp' object='libpowersc_a-psc_interp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_interp.o `test -f 'psc_interp.cpp' || echo '$(srcdir)/'`psc_interp.cpp

libpowersc_a-psc_interp.obj: psc_interp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_interp.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_interp.Tpo -c -o libpowersc_a-psc_interp.obj `if test -f 'psc_interp.cpp'; then $(CYGPATH_W) 'psc_interp.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_interp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_interp.Tpo $(DEPDIR)/libpowersc_a-psc_interp.Po
#	$(AM_V_CXX)source='psc_interp.cpp' object='libpowersc_a-psc_interp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_interp.obj `if test -f 'psc_interp.cpp'; then $(CYGPATH_W) 'psc_interp.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_interp.cpp'; fi`

libpowersc_a-psc_techlib.o: psc_techlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_techlib.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_techlib.Tpo -c -o libpowersc_a-psc_techlib.o `test -f 'psc_techlib.cpp' || echo '$(srcdir)/'`psc_techlib.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_techlib.Tpo $(DEPDIR)/libpowersc_a-psc_techlib.Po
#	$(AM_V_CXX)source='psc_techlib.cpp' object='libpowersc_a-psc_techlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_techlib.o `test -f 'psc_techlib.cpp' || echo '$(srcdir)/'`psc_techlib.cpp

libpowersc_a-psc_techlib.obj: psc_techlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_techlib.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_techlib.Tpo -c -o libpowersc_a-psc_techlib.obj `if test -f 'psc_techlib.cpp'; then $(CYGPATH_W) 'psc_techlib.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_techlib.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_techlib.Tpo $(DEPDIR)/libpowersc_a-psc_techlib.Po
#	$(AM_V_CXX)source='psc_techlib.cpp' object='libpowersc_a-psc_techlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_techlib.obj `if test -f 'psc_techlib.cpp'; then $(CYGPATH_W) 'psc_techlib.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_techlib.cpp'; fi`

libpowersc_a-psc_macromodel.o: psc_macromodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_macromodel.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_macromodel.Tpo -c -o libpowersc_a-psc_macromodel.o `test -f 'psc_macromodel.cpp' || echo '$(srcdir)/'`psc_macromodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_macromodel.Tpo $(DEPDIR)/libpowersc_a-psc_macromodel.Po
#	$(AM_V_CXX)source='psc_macromodel.cpp' object='libpowersc_a-psc_macromodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_macromodel.o `test -f 'psc_macromodel.cpp' || echo '$(srcdir)/'`psc_macromodel.cpp

libpowersc_a-psc_macromodel.obj: psc_macromodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_macromodel.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_macromodel.Tpo -c -o libpowersc_a-psc_macromodel.obj `if test -f 'psc_macromodel.cpp'; then $(CYGPATH_W) 'psc_macromodel.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_macromodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_macromodel.Tpo $(DEPDIR)/libpowersc_a-psc_macromodel.Po
#	$(AM_V_CXX)source='psc_macromodel.cpp' object='libpowersc_a-psc_macromodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_macromodel.obj `if test -f 'psc_macromodel.cpp'; then $(CYGPATH_W) 'psc_macromodel.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_macromodel.cpp'; fi`

libpowersc_a-psc_objinfo.o: psc_objinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_objinfo.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_objinfo.Tpo -c -o libpowersc_a-psc_objinfo.o `test -f 'psc_objinfo.cpp' || echo '$(srcdir)/'`psc_objinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_objinfo.Tpo $(DEPDIR)/libpowersc_a-psc_objinfo.Po
#	$(AM_V_CXX)source='psc_objinfo.cpp' object='libpowersc_a-psc_objinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_objinfo.o `test -f 'psc_objinfo.cpp' || echo '$(srcdir)/'`psc_objinfo.cpp

libpowersc_a-psc_objinfo.obj: psc_objinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_objinfo.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_objinfo.Tpo -c -o libpowersc_a-psc_objinfo.obj `if test -f 'psc_objinfo.cpp'; then $(CYGPATH_W) 'psc_objinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_objinfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_objinfo.Tpo $(DEPDIR)/libpowersc_a-psc_objinfo.Po
#	$(AM_V_CXX)source='psc_objinfo.cpp' object='libpowersc_a-psc_objinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_objinfo.obj `if test -f 'psc_objinfo.cpp'; then $(CYGPATH_W) 'psc_objinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_objinfo.cpp'; fi`

libpowersc_a-psc_bv.o: psc_bv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bv.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_bv.Tpo -c -o libpowersc_a-psc_bv.o `test -f 'psc_bv.cpp' || echo '$(srcdir)/'`psc_bv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_bv.Tpo $(DEPDIR)/libpowersc_a-psc_bv.Po
#	$(AM_V_CXX)source='psc_bv.cpp' object='libpowersc_a-psc_bv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bv.o `test -f 'psc_bv.cpp' || echo '$(srcdir)/'`psc_bv.cpp

libpowersc_a-psc_bv.obj: psc_bv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bv.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_bv.Tpo -c -o libpowersc_a-psc_bv.obj `if test -f 'psc_bv.cpp'; then $(CYGPATH_W) 'psc_bv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bv.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_bv.Tpo $(DEPDIR)/libpowersc_a-psc_bv.Po
#	$(AM_V_CXX)source='psc_bv.cpp' object='libpowersc_a-psc_bv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bv.obj `if test -f 'psc_bv.cpp'; then $(CYGPATH_W) 'psc_bv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bv.cpp'; fi`

libpowersc_a-psc_int.o: psc_int.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_int.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_int.Tpo -c -o libpowersc_a-psc_int.o `test -f 'psc_int.cpp' || echo '$(srcdir)/'`psc_int.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_int.Tpo $(DEPDIR)/libpowersc_a-psc_int.Po
#	$(AM_V_CXX)source='psc_int.cpp' object='libpowersc_a-psc_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_int.o `test -f 'psc_int.cpp' || echo '$(srcdir)/'`psc_int.cpp

libpowersc_a-psc_int.obj: psc_int.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_int.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_int.Tpo -c -o libpowersc_a-psc_int.obj `if test -f 'psc_int.cpp'; then $(CYGPATH_W) 'psc_int.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_int.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_int.Tpo $(DEPDIR)/libpowersc_a-psc_int.Po
#	$(AM_V_CXX)source='psc_int.cpp' object='libpowersc_a-psc_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_int.obj `if test -f 'psc_int.cpp'; then $(CYGPATH_W) 'psc_int.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_int.cpp'; fi`

libpowersc_a-psc_lv.o: psc_lv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_lv.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_lv.Tpo -c -o libpowersc_a-psc_lv.o `test -f 'psc_lv.cpp' || echo '$(srcdir)/'`psc_lv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_lv.Tpo $(DEPDIR)/libpowersc_a-psc_lv.Po
#	$(AM_V_CXX)source='psc_lv.cpp' object='libpowersc_a-psc_lv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_lv.o `test -f 'psc_lv.cpp' || echo '$(srcdir)/'`psc_lv.cpp

libpowersc_a-psc_lv.obj: psc_lv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_lv.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_lv.Tpo -c -o libpowersc_a-psc_lv.obj `if test -f 'psc_lv.cpp'; then $(CYGPATH_W) 'psc_lv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_lv.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_lv.Tpo $(DEPDIR)/libpowersc_a-psc_lv.Po
#	$(AM_V_CXX)source='psc_lv.cpp' object='libpowersc_a-psc_lv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_lv.obj `if test -f 'psc_lv.cpp'; then $(CYGPATH_W) 'psc_lv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_lv.cpp'; fi`

libpowersc_a-psc_uint.o: psc_uint.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_uint.o -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_uint.Tpo -c -o libpowersc_a-psc_uint.o `test -f 'psc_uint.cpp' || echo '$(srcdir)/'`psc_uint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_uint.Tpo $(DEPDIR)/libpowersc_a-psc_uint.Po
#	$(AM_V_CXX)source='psc_uint.cpp' object='libpowersc_a-psc_uint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_uint.o `test -f 'psc_uint.cpp' || echo '$(srcdir)/'`psc_uint.cpp

libpowersc_a-psc_uint.obj: psc_uint.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_uint.obj -MD -MP -MF $(DEPDIR)/libpowersc_a-psc_uint.Tpo -c -o libpowersc_a-psc_uint.obj `if test -f 'psc_uint.cpp'; then $(CYGPATH_W) 'psc_uint.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_uint.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpowersc_a-psc_uint.Tpo $(DEPDIR)/libpowersc_a-psc_uint.Po
#	$(AM_V_CXX)source='psc_uint.cpp' object='libpowersc_a-psc_uint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_uint.obj `if test -f 'psc_uint.cpp'; then $(CYGPATH_W) 'psc_uint.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_uint.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
